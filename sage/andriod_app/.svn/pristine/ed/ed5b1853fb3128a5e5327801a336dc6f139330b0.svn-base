package com.example.myfirstapp;

import java.io.IOException;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.sage.services.RegisterNewService;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;

public class RegisterNewUserActivity extends Activity {
	private EditText usernameEditText;
	private EditText passwordEditText;
	private EditText userDisplayName;
	private boolean registrationSuccess;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register_new_user);
		usernameEditText = (EditText) findViewById(R.id.email_register);
		passwordEditText = (EditText) findViewById(R.id.password_register);
		userDisplayName = (EditText) findViewById(R.id.user_name_register);
		initDirectAuthenticationRegisterButton();
	}

	private void initDirectAuthenticationRegisterButton() {
		Button button = (Button) findViewById(R.id.action_register);
		button.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {

				LoginValidator validator = new LoginValidator(getApplicationContext(), usernameEditText,
						passwordEditText);
				boolean isValidLogin = validator.validateUserNamePassword();
				if (isValidLogin) {
					new RegisterNewUserTask().execute();
				}
			}
		});
	}

	private void startLoginActivity() {
		Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
		startActivity(intent);
	}

	private class RegisterNewUserTask extends AsyncTask<Void, Void, JsonElement> {

		private static final String SUCCESS_ELEMENT_NAME = "success";

		@Override
		protected JsonElement doInBackground(Void... params) {

			try {
				RegisterNewService service = new RegisterNewService();
				return service.registerNewUser(userDisplayName.getText().toString(),
						usernameEditText.getText().toString(), passwordEditText.getText().toString());
			} catch (IOException e) {
				Log.d(CONNECTIVITY_SERVICE, "Unable to login. URL may be invalid.");
				return null;
			}
		}

		@Override
		protected void onPostExecute(JsonElement result) {
			JsonObject resultJsonObject = result.getAsJsonObject();
			registrationSuccess = resultJsonObject.get(SUCCESS_ELEMENT_NAME).getAsBoolean();
			if(registrationSuccess) {
				startLoginActivity();
			}

		}

	}

}
